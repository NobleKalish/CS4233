TODO:

SQUARE BOARD DESIGN(Easiest design first):
- Implement basic coordinate system (x, y)
	- Create a square board
		- Config maxX=8, maxY=8
		- Board.getMaxX = 8: TRUE
		- Board.getMaxY = 8: TRUE
		- Make a board that has 8 rows and 8 columns 
	- putPieceAt & getPieceAt
		- assertNotNull(getPieceAt(2,2)): TRUE
	- putSquareAt & getSquareAt
		- assertNotNull(getSquareAt(3,5): TRUE
		- assertEquals(BLOCK, getSquareAt(3,5)): TRUE
-SQUARE COORDINATE:
	- DistacneTo
		- (1,1)->(2,2): 1 PASS
	 	- (1,2)->(3,5): 3 PASS
	 	- (1,2)->(5,5): 5 PASS

ORTHOSQUARE:
- Similar system as SQUARE BOARD
	- Create an ortho square board
		- Config maxX=8, maxY=8
		- Board.getMaxX = 8: TRUE
		- Board.getMaxY = 8: TRUE
		- Make a board that has 8 rows and 8 columns 
	- putPieceAt & getPieceAt
		- assertNotNull(getPieceAt(2,2)): TRUE
	- putSquareAt & getSquareAt
		- assertNotNull(getSquareAt(3,5): TRUE
		- assertEquals(BLOCK, getSquareAt(3,5)): TRUE
-ORTHO SQUARE COORDINATE:
	- DistacneTo
		- (1,1)->(2,2): 2 PASS
	 	- (1,2)->(3,5): 5 PASS
	 	- (1,2)->(5,5): 7 PASS

HEX:
- Can be inifinite or finite
	- Create an Hex board
		- config maxX=10, maxY=10
		- Board.getMaxX = 10, Board.getMinX = -10: TRUE
		- Board.getMaxY = 10, Board.getMinY = -10: TRUE
		- Make board with 0,0 in the middke of the board
	- putPieceAt & getPieceAt
		- assertNotNull(getPieceAt(2,2)): TRUE
		- assertNotNull(getPieceAt(-2,2)): TRUE
		- assertNotNull(getPieceAt(2,-2)): TRUE
		- assertNotNull(getPieceAt(-2,-2)): TRUE
	- putSquareAt & getSquareAt
		- assertNotNull(getSquareAt(3,5): TRUE
		- assertEquals(BLOCK, getSquareAt(3,5)): TRUE
		- assertNotNull(getSquareAt(-3,5): TRUE
		- assertEquals(BLOCK, getSquareAt(-3,5)): TRUE
		- assertNotNull(getSquareAt(3,-5): TRUE
		- assertEquals(BLOCK, getSquareAt(3,-5)): TRUE
		- assertNotNull(getSquareAt(-3,-5): TRUE
		- assertEquals(BLOCK, getSquareAt(-3,-5)): TRUE
- HEX COORDINATE:
	- DistanceTo
		- (1,1)->(2,2): 2 PASS
	 	- (1,2)->(3,5): 5 PASS
	 	- (1,2)->(5,5): 7 PASS
	 	- (1,2)->(-5,-3): 7 PASS
	 	- (1,2)->(-5,7): 7 PASS
		
		
							BETA
=============================================================================

- Implement EscapeGameManager
	- SquareGameManager
		- Creates a SquareBoard
	- OrthoGameManger
		- Creates a OrthoSquareBoard
	- HexGameManager
		- Creates a HexBoard
	- Implement Move
		- SquareGameManager
			- Can have linear/orthogonal/diagonal/omni
		- OrthoGameManager
			- Can have Orthogonal/omni
		- HexGameManager
			- Can have Linear/omni 
	- Implement getPieceAt
		- SquareGameManager (SquareGameManager.xml)
			- getPieceAt(2,2)-> EscapePiece(PLAYER1, HORSE): TRUE 
		- OrthoGameManager
			- 
		- HexGameManager
			- 
	- Implement makeCoordinate
		- SquareGameManager
			- makeCoordinate(2,2) -> SquareCoordinate(2,2): True
		- OrthoGameManager
			- 
		- HexGameManager
			- 

- Modify EscapeGameBuilder
	- Create a instance by providing a config file path
		- Create board(reuse board builder class?)
		- Add pieces to board
		- Add non-clear block to board
		- Create an instance of game manager that uses the coordinates the board will be using
			- SquareEscapeBoard
				- Creates instance of a SquareGameManager: TRUE
			- OrthoEscapeBoard
				- Creates instance of a OrthoGameManager: TRUE
			- HexEscapeBoard
				- Creates instance of a HexGameManager: TRUE

















































		